[{"/Users/aidar/Desktop/projects/bcbreact/src/index.js":"1","/Users/aidar/Desktop/projects/bcbreact/src/reportWebVitals.js":"2","/Users/aidar/Desktop/projects/bcbreact/src/App.js":"3","/Users/aidar/Desktop/projects/bcbreact/src/components/Navigation.js":"4","/Users/aidar/Desktop/projects/bcbreact/src/components/ProcessingExport.js":"5","/Users/aidar/Desktop/projects/bcbreact/src/components/Hero.js":"6","/Users/aidar/Desktop/projects/bcbreact/src/components/Farming.js":"7","/Users/aidar/Desktop/projects/bcbreact/src/components/Slider.js":"8","/Users/aidar/Desktop/projects/bcbreact/src/components/Journey.js":"9","/Users/aidar/Desktop/projects/bcbreact/src/components/Roasting.js":"10","/Users/aidar/Desktop/projects/bcbreact/src/components/EconomicsAndTransparency.js":"11"},{"size":500,"mtime":1612929284764,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1608235489708,"results":"14","hashOfConfig":"13"},{"size":27178,"mtime":1613688218568,"results":"15","hashOfConfig":"13"},{"size":1230,"mtime":1612994236503,"results":"16","hashOfConfig":"13"},{"size":6109,"mtime":1613685280073,"results":"17","hashOfConfig":"13"},{"size":285,"mtime":1608263879415,"results":"18","hashOfConfig":"13"},{"size":5050,"mtime":1613685589972,"results":"19","hashOfConfig":"13"},{"size":1941,"mtime":1608263014707,"results":"20","hashOfConfig":"13"},{"size":3168,"mtime":1613687381362,"results":"21","hashOfConfig":"13"},{"size":2483,"mtime":1613688321935,"results":"22","hashOfConfig":"13"},{"size":3679,"mtime":1612994221201,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"9gqvg0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/aidar/Desktop/projects/bcbreact/src/index.js",[],["52","53"],"/Users/aidar/Desktop/projects/bcbreact/src/reportWebVitals.js",[],"/Users/aidar/Desktop/projects/bcbreact/src/App.js",["54","55","56"],"/Users/aidar/Desktop/projects/bcbreact/src/components/Navigation.js",[],"/Users/aidar/Desktop/projects/bcbreact/src/components/ProcessingExport.js",["57","58"],"import React, { useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport Button from 'react-bootstrap/Button';\n\nimport './ProcessingExport.css';\n\n\nexport const ProcessingExport = (props) => {\n\n    // Converting Intake Image\n    // const catrachaIntakeImage = 'data:image/jpg;base64,' + props.catrachaIntakeImage;\n\n    // Converting Milling Video\n    // const millingVideo = 'data:video/mp4;base64,' + props.millingVideo;\n\n    // Converting Milling Image\n    // const millingImage = 'data:image/jpg;base64,' + props.millingImage;\n\n    const [totalIntakeWeight, setTotalIntakeWeight] = useState('fetching data from BEXT');\n\n    const [intakeDates, setIntakeDates] = useState('fetching data from BEXT');\n\n    const [paymentsTotal, setPaymentsTotal] = useState('fetching data from BEXT');\n\n    Object.keys(props.lotHistory).forEach(async function (key) {\n\n        if (props.lotHistory[key].nodeId === '01b66b57-c0a0-481c-abb0-57be005096da') {\n\n            // Getting the lotIDs Array\n            const lotIDs = props.lotHistory[key].lotIds;\n\n            // console.log(lotIDs);\n\n            // Placeholder object\n            const lotData = {};\n\n            // Weights array\n            const weights = [];\n\n            // Money array\n            const payments = [];\n\n            // Dates array\n            const intakeDates = [];\n\n            for (let i = 0; i < lotIDs.length; i++) {\n                // API call and object assignment\n                Object.assign(lotData,\n                    await fetch(`${process.env.REACT_APP_GET_LOT}/${lotIDs[i]}`, {\n                        method: 'GET',\n                        headers: {\n                            'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n                        }\n                    }).then(res => res.json()));\n\n                // Getting Current Weight in integer format\n                weights[i] = parseInt(lotData.currentWeight);\n\n                // Placing Transaction Date value into a string variable\n                const str = lotData.customData['TransactionDate.MeasureTime'].dateTimeValue;\n\n\n                // Slicing off first 10 characters\n                const intakeDate = str.slice(0, 10);\n\n\n                // Capturing Intake Date into the array\n                intakeDates[i] = intakeDate;\n\n                // Capturing TotalValue.Measure into the array\n                payments[i] = parseInt(lotData.customData[\"TotalValue.Measure\"].value);\n\n            }\n\n            // Getting the sum of weights\n            const sumOfWeights = weights.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Getting the sum of payments\n            const sumOfPayments = payments.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Sorting the Dates Array\n            intakeDates.sort();\n\n            // Testing\n            // console.log(`${sumOfWeights}, ${(sumOfPayments / 24.5).toFixed(2)}, ${intakeDates}`);\n\n            setTotalIntakeWeight(`${sumOfWeights} Lbs from ${weights.length} separate intakes`);\n\n            setIntakeDates(`${intakeDates[0]} and ${intakeDates[intakeDates.length - 1]}`);\n\n            setPaymentsTotal(`${(sumOfPayments / 24.5).toFixed(2)} USD`);\n        }\n\n    });\n\n    return (\n        <div className=\"processing-section-bg\" style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='processing-export'>\n            <Container>\n\n                <h2 style={{ color: 'white' }}>Processed and Exported by Catracha Coffee</h2>\n                <p style={{ color: 'white' }}>A social enterprise dedicated to accessing the specialty coffee market for coffee farmers in Santa Elena, La Paz, Honduras.</p>\n                <Row>\n                    <Col lg={3} md={6} sm={12}>\n                        <Button variant=\"outline-light\" size=\"lg\" block style={{ 'margin-bottom': '2rem' }}>LEARN MORE</Button>\n                    </Col>\n                </Row>\n\n                <Row>\n\n                    <Col lg>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent', 'margin-bottom': '2rem' }}>\n                            <Card.Body>\n                                <Card.Title>Catracha Intake Parchment</Card.Title>\n                                <Card.Text>\n                                    Total Intake Weight: {totalIntakeWeight}<br />\n                                    Intake Dates between: {intakeDates}<br />\n                                    Payments total: {paymentsTotal}<br />\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Img variant=\"top\" src={props.catrachaIntakeImage} style={{ 'max-height': '40rem' }} />\n                        </Card>\n\n                    </Col>\n\n                    <Col lg>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent' }}>\n                            <Card.Body>\n                                <Card.Title>Milling</Card.Title>\n                                <Card.Text>\n                                    Milled on: {props.milledOnDate}<br />\n                                    Miller: {props.miller}<br />\n                                    Location: {props.millingLocation}<br />\n                                    Lot Current Weight: {props.lotCurrentWeight}\n                                </Card.Text>\n                            </Card.Body>\n                            <video style={{ 'max-height': '40rem' }} src={props.millingVideo} controls></video>\n                            <Card.Img variant=\"top\" src={props.millingImage} style={{ 'max-height': '40rem' }} />\n                        </Card>\n\n                    </Col>\n\n                </Row>\n\n            </Container>\n        </div>\n    );\n}\n\nexport default ProcessingExport;","/Users/aidar/Desktop/projects/bcbreact/src/components/Hero.js",["59"],"import React from 'react';\n\n// Bootstrap components\nimport Container from 'react-bootstrap/Container';\n\nimport Slider from './Slider';\n\nexport const Hero = () => {\n    return (\n        <div id='hero'>\n\n                <Slider id='hero' />\n\n        </div>\n    );\n}\n\nexport default Hero;","/Users/aidar/Desktop/projects/bcbreact/src/components/Farming.js",["60"],"import React, { useEffect, useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nexport const Farming = (props) => {\n\n    // Render Test\n    // console.log('Hello from farming');\n\n    const [totalAbsorbedWeight, setTotalAbsorbedWeight] = useState('fetching data from BEXT');\n\n    const [totalDePulpedWeight, setTotalDePulpedWeight] = useState('fetching data from BEXT');\n\n    const [dePulpedDates, setdePulpedDates] = useState('fetching data from BEXT');\n\n    // Placeholder object\n    const lotData = {};\n\n    // Absorbed Weights array\n    const absorbedWeights = [];\n\n    // De-pupled Weights array\n    const dePupledWeights = [];\n\n    // De-pluped Dates array\n    const dePupledDates = [];\n\n    let sumOfAbsorbedWeights;\n\n    let sumOfDePupledWeights;\n\n    Object.keys(props.lotHistory).forEach(async function (key) {\n\n        if (props.lotHistory[key].nodeId === '0270eada-dbb8-45dc-a38d-cffc166d87ea') {\n\n            // Getting the lotIDs Array\n            const lotIDs = props.lotHistory[key].lotIds;\n\n            // console.log(lotIDs);\n\n            for (let i = 0; i < lotIDs.length; i++) {\n                // API call and object assignment\n                Object.assign(lotData,\n                    await fetch(`${process.env.REACT_APP_GET_LOT}/${lotIDs[i]}`, {\n                        method: 'GET',\n                        headers: {\n                            'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n                        }\n                    }).then(res => res.json()));\n\n                // Getting Absorbed Weight in integer format\n                absorbedWeights[i] = parseInt(lotData.absorbedWeight);\n\n                // Getting De-Pupled Weight in integer format\n                dePupledWeights[i] = parseInt(lotData.currentWeight);\n\n                // Capturing De-Pupled Date into the array\n                dePupledDates[i] = lotData.customData['De-PulpingDate.MeasureTime'].dateTimeValue;\n            }\n\n            // Getting the sum of Absorbed Weights\n            sumOfAbsorbedWeights = absorbedWeights.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Getting the sum of De-Pupled Weight Weights\n            sumOfDePupledWeights = dePupledWeights.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Sorting the De-Pupled Dates Array\n            dePupledDates.sort();\n\n            // Testing\n            // console.log(sumOfAbsorbedWeights, sumOfDePupledWeights, dePupledDates[0], dePupledDates[dePupledDates.length - 1]);\n\n            setTotalAbsorbedWeight(`${sumOfAbsorbedWeights} Lbs`);\n\n            setTotalDePulpedWeight(`${sumOfDePupledWeights} Lbs`);\n\n            setdePulpedDates(`${dePupledDates[0]} and ${dePupledDates[dePupledDates.length - 1]}`);\n\n        }\n\n    });\n\n    return (\n        <div style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='farming'>\n            <Container>\n\n                <h2 style={{ 'margin-bottom': '3rem' }}>Grown, Picked, and Processed by Claudia & Juan</h2>\n\n                <Row>\n\n                    <Col md>\n\n                        <Card border=\"dark\" style={{ 'margin-bottom': '2rem' }}>\n\n                            {/* <Card.Img variant=\"top\" src={slideOne} style={{ 'height': '20rem' }} /> */}\n                            <Card.Body>\n                                <Card.Title>Farmer Harvest</Card.Title>\n                                <Card.Text>\n                                    Picked by: {props.pickedBy}<br />\n                                    Picked Cherries Weight: {props.pickedCherriesWeight}<br />\n                                    Date picked: {props.datePicked}<br />\n                                    Variety: {props.variety}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Img variant=\"top\" src={props.pickerImage} style={{ 'max-height': '40rem' }} />\n                        </Card>\n\n                    </Col>\n\n                    <Col md>\n\n                        <Card border=\"dark\">\n                            <Card.Body>\n                                <Card.Title>Farmer De-Pulping</Card.Title>\n                                <Card.Text>\n                                    Total Absorbed Weight: {totalAbsorbedWeight}<br />\n                                    Total De-pulped Weight: {totalDePulpedWeight}<br />\n                                    De-pulped between: {dePulpedDates}\n                                </Card.Text>\n                            </Card.Body>\n                            <video style={{ 'height': '20rem' }} src={props.dePulpingVideo} controls></video>\n                        </Card>\n                    </Col>\n\n                </Row>\n\n            </Container>\n        </div >\n    );\n}\n\nexport default Farming;","/Users/aidar/Desktop/projects/bcbreact/src/components/Slider.js",["61","62"],"import React from 'react';\nimport './Slider.css';\n\n// Bootstrap components\nimport Carousel from 'react-bootstrap/Carousel'\n\n// Images\nimport slideOne from '../images/slideOne.jpg';\nimport slideTwo from '../images/slideTwo.jpg';\n\nexport default function Slider() {\n    // style={{'height': '100vh'}}\n\n    // className=\"d-block w-100\"\n    return(\n        <>\n            <Carousel>\n\n                <Carousel.Item interval={1000} >\n                    <div className='slide1' />\n                    <Carousel.Caption>\n                        <h3>Your coffee might be opaque, but how it got to you should be transparent</h3>\n                        <p>Thank you for being a coffee pioneer! You are one of the first who have this level of visibility at the wave of your hand. The link that took you here is tied to a specific batch of roasted coffee, and you can see some highlights of its origin and how it got to you, recorded using blockchain technology.</p>\n\n                        <p>We invite you to explore this site and share your feedback in the form below.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n\n                <Carousel.Item interval={500} >\n                <div className='slide2' />\n                    <Carousel.Caption>\n                        <h3>Your coffee might be opaque, but how it got to you should be transparent</h3>\n                        <p>Thank you for being a coffee pioneer! You are one of the first who have this level of visibility at the wave of your hand. The link that took you here is tied to a specific batch of roasted coffee, and you can see some highlights of its origin and how it got to you, recorded using blockchain technology.</p>\n\n                        <p>We invite you to explore this site and share your feedback in the form below.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n\n            </Carousel>\n        </>\n    );\n}","/Users/aidar/Desktop/projects/bcbreact/src/components/Journey.js",[],"/Users/aidar/Desktop/projects/bcbreact/src/components/Roasting.js",["63","64","65","66","67","68"],"/Users/aidar/Desktop/projects/bcbreact/src/components/EconomicsAndTransparency.js",["69","70","71","72","73","74"],"// EconomicsAndTransparency\nimport React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport Button from 'react-bootstrap/Button';\n\nimport slideOne from '../images/slideOne.jpg';\nimport slideTwo from '../images/slideTwo.jpg';\n\nimport './EconomicsAndTransparency.css';\n\n\nexport const EconomicsAndTransparency = () => {\n    return (\n        <div className=\"economics-section-bg\" style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='economics'>\n            <Container>\n\n                <h2 style={{ color: 'white' }}>Economics & Transparency</h2>\n                <p style={{ color: 'white' }}>Technology can revolutionize the way coffee growers sell their product by authenticating direct trade claims, tracking supply chain activities and facilitating economic transparency. And research shows this yields increased profits, feedback and capital access for global producers. Below, stakeholders share economic data for financial transparency.</p>\n\n                <Row>\n\n                    <Col lg={4} sm={12}>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent', 'margin-bottom': '2rem' }}>\n                            <Card.Body>\n                                <Card.Title>Claudia & Juan</Card.Title>\n                                <Card.Text>\n                                    Paid for Parchment: $744.20<br />\n                                Profit Share: $708.20<br />\n                                Total Payment: $1452.40<br />\n                                Total Payment Price: $1.911/lb green exported\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                    </Col>\n\n                    <Col lg={4} sm={12}>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent', 'margin-bottom': '2rem' }}>\n                            <Card.Body>\n                                <Card.Title>Catracha</Card.Title>\n                                <Card.Text>\n                                    FOB base: $2.25/lb*<br />\n                                FOB premium: $1.25/lb*<br />\n                                FOB Catracha Community contribution: $0.25/lb*<br />\n                                FOB total: $3.75/lb*<br />\n                                * of exported green coffee\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                    </Col>\n\n                    <Col lg={4} sm={12}>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent' }}>\n                            <Card.Body>\n                                <Card.Title>Queen City</Card.Title>\n                                <Card.Text>\n                                    QC FOB: $3.75/lb<br />\n                                QC import cost: $0.65/lb ($4.40/lb paid to Importer)<br />\n                                QC freight: $0.15/lb<br />\n                                QC roasting labor: $0.52/lb<br />\n                                QC total cost at roaster: $5.62/lb†<br />\n                                † cost prior to packaging & distribution\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                    </Col>\n\n                </Row>\n\n\n            </Container>\n        </div>\n    );\n}\n\nexport default EconomicsAndTransparency;",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":12,"column":20,"nodeType":"81","messageId":"82","endLine":12,"endColumn":26},{"ruleId":"79","severity":1,"message":"83","line":13,"column":3,"nodeType":"81","messageId":"82","endLine":13,"endColumn":9},{"ruleId":"79","severity":1,"message":"84","line":14,"column":3,"nodeType":"81","messageId":"82","endLine":14,"endColumn":8},{"ruleId":"85","severity":1,"message":"86","line":121,"column":59,"nodeType":"87","endLine":121,"endColumn":73},{"ruleId":"85","severity":1,"message":"86","line":137,"column":59,"nodeType":"87","endLine":137,"endColumn":73},{"ruleId":"79","severity":1,"message":"88","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":17},{"ruleId":"79","severity":1,"message":"89","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"90","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":16},{"ruleId":"79","severity":1,"message":"91","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":16},{"ruleId":"79","severity":1,"message":"92","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":13},{"ruleId":"79","severity":1,"message":"93","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":14},{"ruleId":"79","severity":1,"message":"90","line":11,"column":8,"nodeType":"81","messageId":"82","endLine":11,"endColumn":16},{"ruleId":"79","severity":1,"message":"91","line":12,"column":8,"nodeType":"81","messageId":"82","endLine":12,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":28,"column":59,"nodeType":"87","endLine":28,"endColumn":73},{"ruleId":"85","severity":1,"message":"86","line":41,"column":59,"nodeType":"87","endLine":41,"endColumn":73},{"ruleId":"79","severity":1,"message":"93","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":14},{"ruleId":"79","severity":1,"message":"90","line":11,"column":8,"nodeType":"81","messageId":"82","endLine":11,"endColumn":16},{"ruleId":"79","severity":1,"message":"91","line":12,"column":8,"nodeType":"81","messageId":"82","endLine":12,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":29,"column":59,"nodeType":"87","endLine":29,"endColumn":73},{"ruleId":"85","severity":1,"message":"86","line":45,"column":59,"nodeType":"87","endLine":45,"endColumn":73},{"ruleId":"85","severity":1,"message":"86","line":62,"column":59,"nodeType":"87","endLine":62,"endColumn":73},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Container' is defined but never used.","'useEffect' is defined but never used.","'slideOne' is defined but never used.","'slideTwo' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]